{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
<article{{ attributes }}>
<main>
<div class="pt-20">
<div class="bg-white dark:bg-[#19202D] h-32 w-[730px] mx-auto rounded-xl flex flex-row">
<div class="h-full w-32">{{content.field_logo}}</div>
<div class="p-4">
<h1 class="text-3xl">{{content.field_company}}</h1>
<div class="text-slate-400 mt-2">{{content.field_site}}</div>
</div>
 
<a href="#"><button class="text-xl h-16 px-4 bg-[#f5f3ff] dark:bg-[#1e293b] dark:text-white text-[#5964E0] mt-10 ml-80 hover:bg-[#ddd6fe] rounded">Company site</button></a>
</div>
</div>


<div class="pt-3 flex flex-col py-8 px-6 pt-6 gap-y-2.5">
<div class="p-10 bg-white dark:bg-[#19202D] h-[1257px] w-[730px] mx-auto rounded px-4">
<div class="text-slate-400">{{ content.field_employment }}</div>
<div class="text-xl flex flex-row text-slate-900 dark:text-white">{{ content.field_job }}
<button class="text-xl h-14 px-4 bg-[#5964E0] text-white hover:opacity-30 ml-80 rounded">Apply Now</button>
</div>
<div class="text-[#5964E0]">{{ content.field_country }}</div>
<div class="text-slate-400 pt-4">{{ content.field_about }}</div>
<h1 class="text-xl font-bold pt-10">Requirements</h1>
<div class="text-slate-400 pt-5">{{ content.field_requirements }}</div>
<div class="pt-3 list-disc">
<ul class="text-slate-400 list-disc pl-3 pt-3">
  <li class="mt-3">{{ content.field_first_li }}</li>
  <li class="mt-3">{{ content.field_second_li }}</li>
  <li class="mt-3">{{ content.field_third_li }}</li>
  <li class="mt-3">{{ content.field_fourth_li }}</li>
</ul>

<div>
<h1 class="pt-10 text-xl font-bold">What You Will do</h1>
<div class="pt-5 list-decimal">
<ol class="text-slate-400 list-decimal pl-3 pt-3">
  <li class="mt-3">{{content.field_first}}</li>
  <li class="mt-3">{{content.field_second}}</li>
  <li class="mt-3">{{content.field_third}}</li>
  <li class="mt-3">{{content.field_fourth}}</li>
</ol>
</div>
</div>

</div>
</main>
<footer class="flex justify-between items-center mt-24 bg-white dark:bg-[#19202D] h-32 w-full py-[23px] px-[234px]">
<div class="block">
<div class="font-bold text-2xl"><h1>{{ content.field_job }}</h1></div>
<div class="text-slate-400 pt-4">So Digital Inc.</div>
</div>
<button class="text-xl h-14 px-4 bg-[#5964E0] text-white ml-52 hover:opacity-30 rounded">Apply Now</button>
</footer>
</article>
